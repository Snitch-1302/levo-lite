{
  "id": null,
  "report_name": "API Security Scan - 2025-08-12 13:55:50",
  "target_api": "http://localhost:8000",
  "generated_at": "2025-08-12 13:55:50.040418",
  "total_tests": 8,
  "passed_tests": 4,
  "failed_tests": 2,
  "error_tests": 2,
  "vulnerabilities_by_type": {
    "idor": 2
  },
  "vulnerabilities_by_severity": {
    "high": 2
  },
  "results": [
    {
      "id": null,
      "test_id": 0,
      "test_name": "IDOR - User Profile Access",
      "status": "failed",
      "executed_at": "2025-08-12 13:55:45.977589",
      "duration_ms": 2023,
      "request_url": "http://localhost:8000/profiles/2",
      "request_method": "GET",
      "request_headers": {
        "Authorization": "Bearer user_token_here"
      },
      "request_body": null,
      "response_status": 200,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:45 GMT",
        "server": "uvicorn",
        "content-length": "162",
        "content-type": "application/json"
      },
      "response_body": {
        "full_name": "John Doe",
        "phone": "555-0101",
        "address": "456 User Ave, City, State",
        "ssn": "987-65-4321",
        "id": 2,
        "user_id": 2,
        "created_at": "2025-08-07T14:56:00.346135"
      },
      "response_size": 162,
      "vulnerability_found": true,
      "vulnerability_type": "idor",
      "severity": "high",
      "analysis": "VULNERABILITY FOUND: Test if user can access other users' profiles. Expected 403, got 200. Should deny access to other user's profile",
      "evidence": "Endpoint: /profiles/{user_id}\nMethod: GET\nTest User: UserRole.USER\nExpected Status: 403\nActual Status: 200\nResponse Data: {\n  \"full_name\": \"John Doe\",\n  \"phone\": \"555-0101\",\n  \"address\": \"456 User Ave, City, State\",\n  \"ssn\": \"987-65-4321\",\n  \"id\": 2,\n  \"user_id\": 2,\n  \"created_at\": \"2025-08-07T14:56:00.346135\"\n}",
      "recommendation": "Implement proper authorization checks to ensure users can only access their own resources",
      "error_message": null
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "IDOR - User Data Access",
      "status": "failed",
      "executed_at": "2025-08-12 13:55:46.494607",
      "duration_ms": 16,
      "request_url": "http://localhost:8000/users/2",
      "request_method": "GET",
      "request_headers": {
        "Authorization": "Bearer user_token_here"
      },
      "request_body": null,
      "response_status": 200,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:46 GMT",
        "server": "uvicorn",
        "content-length": "114",
        "content-type": "application/json"
      },
      "response_body": {
        "username": "user1",
        "email": "user1@example.com",
        "id": 2,
        "is_admin": false,
        "created_at": "2025-08-07T14:56:00.351822"
      },
      "response_size": 114,
      "vulnerability_found": true,
      "vulnerability_type": "idor",
      "severity": "high",
      "analysis": "VULNERABILITY FOUND: Test if user can access other users' data. Expected 403, got 200. Should deny access to other user's data",
      "evidence": "Endpoint: /users/{user_id}\nMethod: GET\nTest User: UserRole.USER\nExpected Status: 403\nActual Status: 200\nResponse Data: {\n  \"username\": \"user1\",\n  \"email\": \"user1@example.com\",\n  \"id\": 2,\n  \"is_admin\": false,\n  \"created_at\": \"2025-08-07T14:56:00.351822\"\n}",
      "recommendation": "Implement proper authorization checks to ensure users can only access their own resources",
      "error_message": null
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "BOLA - Admin Endpoint Access",
      "status": "passed",
      "executed_at": "2025-08-12 13:55:47.001446",
      "duration_ms": 6,
      "request_url": "http://localhost:8000/admin/users",
      "request_method": "GET",
      "request_headers": {
        "Authorization": "Bearer user_token_here"
      },
      "request_body": null,
      "response_status": 401,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:46 GMT",
        "server": "uvicorn",
        "www-authenticate": "Bearer",
        "content-length": "43",
        "content-type": "application/json"
      },
      "response_body": {
        "detail": "Could not validate credentials"
      },
      "response_size": 43,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": "low",
      "analysis": "SECURE: Test if regular user can access admin endpoints. Got expected status 401. Should deny access to admin endpoints",
      "evidence": null,
      "recommendation": null,
      "error_message": null
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "Missing Auth - Sensitive Endpoint",
      "status": "error",
      "executed_at": "2025-08-12 13:55:47.510236",
      "duration_ms": 8,
      "request_url": "http://localhost:8000/internal/users",
      "request_method": "GET",
      "request_headers": {},
      "request_body": null,
      "response_status": 0,
      "response_headers": {},
      "response_body": null,
      "response_size": 0,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": null,
      "analysis": "Test failed with error: 1 validation error for TestResult\nresponse_body\n  Input should be a valid dictionary [type=dict_type, input_value=[{'username': 'admin', 'e...08-07T14:56:00.351825'}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/dict_type",
      "evidence": null,
      "recommendation": "Check network connectivity and API availability",
      "error_message": "1 validation error for TestResult\nresponse_body\n  Input should be a valid dictionary [type=dict_type, input_value=[{'username': 'admin', 'e...08-07T14:56:00.351825'}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/dict_type"
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "Missing Auth - Admin Endpoint",
      "status": "passed",
      "executed_at": "2025-08-12 13:55:48.014946",
      "duration_ms": 3,
      "request_url": "http://localhost:8000/admin/users",
      "request_method": "GET",
      "request_headers": {},
      "request_body": null,
      "response_status": 403,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:47 GMT",
        "server": "uvicorn",
        "content-length": "30",
        "content-type": "application/json"
      },
      "response_body": {
        "detail": "Not authenticated"
      },
      "response_size": 30,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": "low",
      "analysis": "SECURE: Test if admin endpoint requires authentication. Got expected status 403. Should require authentication",
      "evidence": null,
      "recommendation": null,
      "error_message": null
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "Missing Auth - Debug Endpoint",
      "status": "error",
      "executed_at": "2025-08-12 13:55:48.522683",
      "duration_ms": 7,
      "request_url": "http://localhost:8000/debug/users",
      "request_method": "GET",
      "request_headers": {},
      "request_body": null,
      "response_status": 0,
      "response_headers": {},
      "response_body": null,
      "response_size": 0,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": null,
      "analysis": "Test failed with error: 1 validation error for TestResult\nresponse_body\n  Input should be a valid dictionary [type=dict_type, input_value=[{'id': 1, 'username': 'a...om', 'is_admin': False}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/dict_type",
      "evidence": null,
      "recommendation": "Check network connectivity and API availability",
      "error_message": "1 validation error for TestResult\nresponse_body\n  Input should be a valid dictionary [type=dict_type, input_value=[{'id': 1, 'username': 'a...om', 'is_admin': False}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.11/v/dict_type"
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "Privilege Escalation - User to Admin",
      "status": "passed",
      "executed_at": "2025-08-12 13:55:49.031792",
      "duration_ms": 8,
      "request_url": "http://localhost:8000/admin/users",
      "request_method": "GET",
      "request_headers": {
        "Authorization": "Bearer user_token_here"
      },
      "request_body": null,
      "response_status": 401,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:48 GMT",
        "server": "uvicorn",
        "www-authenticate": "Bearer",
        "content-length": "43",
        "content-type": "application/json"
      },
      "response_body": {
        "detail": "Could not validate credentials"
      },
      "response_size": 43,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": "low",
      "analysis": "SECURE: Test if regular user can perform admin actions. Got expected status 401. Should deny admin access to regular user",
      "evidence": null,
      "recommendation": null,
      "error_message": null
    },
    {
      "id": null,
      "test_id": 0,
      "test_name": "Privilege Escalation - Delete User",
      "status": "passed",
      "executed_at": "2025-08-12 13:55:49.539506",
      "duration_ms": 6,
      "request_url": "http://localhost:8000/admin/users/2",
      "request_method": "DELETE",
      "request_headers": {
        "Authorization": "Bearer user_token_here"
      },
      "request_body": null,
      "response_status": 401,
      "response_headers": {
        "date": "Tue, 12 Aug 2025 13:55:49 GMT",
        "server": "uvicorn",
        "www-authenticate": "Bearer",
        "content-length": "43",
        "content-type": "application/json"
      },
      "response_body": {
        "detail": "Could not validate credentials"
      },
      "response_size": 43,
      "vulnerability_found": false,
      "vulnerability_type": null,
      "severity": "low",
      "analysis": "SECURE: Test if regular user can delete other users. Got expected status 401. Should deny delete access to regular user",
      "evidence": null,
      "recommendation": null,
      "error_message": null
    }
  ],
  "risk_score": 2.5,
  "risk_level": "LOW",
  "owasp_coverage": {
    "API1:2023 - Broken Object Level Authorization": 2
  }
}